// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class Request;
@class RequestApp;
@class RequestAppBuilder;
@class RequestBuilder;
@class RequestDevice;
@class RequestDeviceBuilder;
@class RequestDeviceGeo;
@class RequestDeviceGeoBuilder;
@class RequestImpression;
@class RequestImpressionBuilder;
@class RequestSDK;
@class RequestSDKBuilder;
@class RequestUser;
@class RequestUserBuilder;
@class Response;
@class ResponseBuilder;
@class ResponseImpressionAd;
@class ResponseImpressionAdApps;
@class ResponseImpressionAdAppsBuilder;
@class ResponseImpressionAdBannerAd;
@class ResponseImpressionAdBannerAdBuilder;
@class ResponseImpressionAdBuilder;


typedef NS_ENUM(SInt32, RequestTestType) {
  RequestTestTypeKDevelpoment = 1,
  RequestTestTypeKProduction = 2,
  RequestTestTypeKDebug = 3,
};

BOOL RequestTestTypeIsValidValue(RequestTestType value);
NSString *NSStringFromRequestTestType(RequestTestType value);

typedef NS_ENUM(SInt32, RequestDeviceDeviceOrientation) {
  RequestDeviceDeviceOrientationKUnknownDeviceOrientation = 1,
  RequestDeviceDeviceOrientationKPortrait = 2,
  RequestDeviceDeviceOrientationKPortraitUpsideDown = 3,
  RequestDeviceDeviceOrientationKLandscapeLeft = 4,
  RequestDeviceDeviceOrientationKLandscapeRight = 5,
};

BOOL RequestDeviceDeviceOrientationIsValidValue(RequestDeviceDeviceOrientation value);
NSString *NSStringFromRequestDeviceDeviceOrientation(RequestDeviceDeviceOrientation value);

typedef NS_ENUM(SInt32, RequestDeviceDeviceType) {
  RequestDeviceDeviceTypeKUnknownDeviceType = 1,
  RequestDeviceDeviceTypeKPhone = 2,
  RequestDeviceDeviceTypeKPad = 3,
  RequestDeviceDeviceTypeKTv = 4,
  RequestDeviceDeviceTypeKPc = 5,
  RequestDeviceDeviceTypeKGameConsole = 6,
  RequestDeviceDeviceTypeKCarPlay = 7,
};

BOOL RequestDeviceDeviceTypeIsValidValue(RequestDeviceDeviceType value);
NSString *NSStringFromRequestDeviceDeviceType(RequestDeviceDeviceType value);

typedef NS_ENUM(SInt32, RequestDevicePlatform) {
  RequestDevicePlatformKIos = 1,
  RequestDevicePlatformKAndroid = 2,
};

BOOL RequestDevicePlatformIsValidValue(RequestDevicePlatform value);
NSString *NSStringFromRequestDevicePlatform(RequestDevicePlatform value);

typedef NS_ENUM(SInt32, RequestDeviceNetworkConnectionType) {
  RequestDeviceNetworkConnectionTypeKUnknownNetWork = 1,
  RequestDeviceNetworkConnectionTypeKWifi = 2,
  RequestDeviceNetworkConnectionTypeKG2 = 3,
  RequestDeviceNetworkConnectionTypeKG3 = 4,
  RequestDeviceNetworkConnectionTypeKG4 = 5,
  RequestDeviceNetworkConnectionTypeKG5 = 6,
};

BOOL RequestDeviceNetworkConnectionTypeIsValidValue(RequestDeviceNetworkConnectionType value);
NSString *NSStringFromRequestDeviceNetworkConnectionType(RequestDeviceNetworkConnectionType value);

typedef NS_ENUM(SInt32, ResponseImpressionAdADType) {
  ResponseImpressionAdADTypeKImgbanner = 1,
  ResponseImpressionAdADTypeKGlbanner = 2,
  ResponseImpressionAdADTypeKImginterstital = 3,
  ResponseImpressionAdADTypeKGlinterstital = 4,
  ResponseImpressionAdADTypeKApps = 5,
  ResponseImpressionAdADTypeKMdapps = 6,
};

BOOL ResponseImpressionAdADTypeIsValidValue(ResponseImpressionAdADType value);
NSString *NSStringFromResponseImpressionAdADType(ResponseImpressionAdADType value);

typedef NS_ENUM(SInt32, ResponseImpressionAdBannerAdType) {
  ResponseImpressionAdBannerAdTypeKImg = 1,
  ResponseImpressionAdBannerAdTypeKGl = 2,
};

BOOL ResponseImpressionAdBannerAdTypeIsValidValue(ResponseImpressionAdBannerAdType value);
NSString *NSStringFromResponseImpressionAdBannerAdType(ResponseImpressionAdBannerAdType value);

typedef NS_ENUM(SInt32, ResponseImpressionAdBannerAdProductType) {
  ResponseImpressionAdBannerAdProductTypeKLink = 1,
};

BOOL ResponseImpressionAdBannerAdProductTypeIsValidValue(ResponseImpressionAdBannerAdProductType value);
NSString *NSStringFromResponseImpressionAdBannerAdProductType(ResponseImpressionAdBannerAdProductType value);

typedef NS_ENUM(SInt32, ResponseImpressionAdAppsProductType) {
  ResponseImpressionAdAppsProductTypeKShare = 1,
  ResponseImpressionAdAppsProductTypeKLink = 2,
};

BOOL ResponseImpressionAdAppsProductTypeIsValidValue(ResponseImpressionAdAppsProductType value);
NSString *NSStringFromResponseImpressionAdAppsProductType(ResponseImpressionAdAppsProductType value);


@interface SdkRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Request_event_id @"eventId"
#define Request_test_type @"testType"
#define Request_device @"device"
#define Request_app @"app"
#define Request_user @"user"
#define Request_sdk @"sdk"
#define Request_impression @"impression"
@interface Request : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventId_:1;
  BOOL hasDevice_:1;
  BOOL hasApp_:1;
  BOOL hasUser_:1;
  BOOL hasSdk_:1;
  BOOL hasImpression_:1;
  BOOL hasTestType_:1;
  NSString* eventId;
  RequestDevice* device;
  RequestApp* app;
  RequestUser* user;
  RequestSDK* sdk;
  RequestImpression* impression;
  RequestTestType testType;
}
- (BOOL) hasEventId;
- (BOOL) hasTestType;
- (BOOL) hasDevice;
- (BOOL) hasApp;
- (BOOL) hasUser;
- (BOOL) hasSdk;
- (BOOL) hasImpression;
@property (readonly, strong) NSString* eventId;
@property (readonly) RequestTestType testType;
@property (readonly, strong) RequestDevice* device;
@property (readonly, strong) RequestApp* app;
@property (readonly, strong) RequestUser* user;
@property (readonly, strong) RequestSDK* sdk;
@property (readonly, strong) RequestImpression* impression;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestBuilder*) builder;
+ (RequestBuilder*) builder;
+ (RequestBuilder*) builderWithPrototype:(Request*) prototype;
- (RequestBuilder*) toBuilder;

+ (Request*) parseFromData:(NSData*) data;
+ (Request*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Request*) parseFromInputStream:(NSInputStream*) input;
+ (Request*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define Device_ip @"ip"
#define Device_user_agent @"userAgent"
#define Device_pixel_width @"pixelWidth"
#define Device_pixel_height @"pixelHeight"
#define Device_physical_size @"physicalSize"
#define Device_is_flash_enabled @"isFlashEnabled"
#define Device_is_js_enabled @"isJsEnabled"
#define Device_name @"name"
#define Device_brand @"brand"
#define Device_model @"model"
#define Device_os @"os"
#define Device_os_version @"osVersion"
#define Device_is_rooted @"isRooted"
#define Device_device_orientation @"deviceOrientation"
#define Device_device_type @"deviceType"
#define Device_platform @"platform"
#define Device_geo @"geo"
#define Device_network_connection_type @"networkConnectionType"
#define Device_carrier_id @"carrierId"
@interface RequestDevice : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsFlashEnabled_:1;
  BOOL hasIsJsEnabled_:1;
  BOOL hasIsRooted_:1;
  BOOL hasPhysicalSize_:1;
  BOOL hasPixelWidth_:1;
  BOOL hasPixelHeight_:1;
  BOOL hasCarrierId_:1;
  BOOL hasIp_:1;
  BOOL hasUserAgent_:1;
  BOOL hasName_:1;
  BOOL hasBrand_:1;
  BOOL hasModel_:1;
  BOOL hasOs_:1;
  BOOL hasOsVersion_:1;
  BOOL hasGeo_:1;
  BOOL hasDeviceOrientation_:1;
  BOOL hasDeviceType_:1;
  BOOL hasPlatform_:1;
  BOOL hasNetworkConnectionType_:1;
  BOOL isFlashEnabled_:1;
  BOOL isJsEnabled_:1;
  BOOL isRooted_:1;
  Float64 physicalSize;
  SInt32 pixelWidth;
  SInt32 pixelHeight;
  SInt32 carrierId;
  NSString* ip;
  NSString* userAgent;
  NSString* name;
  NSString* brand;
  NSString* model;
  NSString* os;
  NSString* osVersion;
  RequestDeviceGeo* geo;
  RequestDeviceDeviceOrientation deviceOrientation;
  RequestDeviceDeviceType deviceType;
  RequestDevicePlatform platform;
  RequestDeviceNetworkConnectionType networkConnectionType;
}
- (BOOL) hasIp;
- (BOOL) hasUserAgent;
- (BOOL) hasPixelWidth;
- (BOOL) hasPixelHeight;
- (BOOL) hasPhysicalSize;
- (BOOL) hasIsFlashEnabled;
- (BOOL) hasIsJsEnabled;
- (BOOL) hasName;
- (BOOL) hasBrand;
- (BOOL) hasModel;
- (BOOL) hasOs;
- (BOOL) hasOsVersion;
- (BOOL) hasIsRooted;
- (BOOL) hasDeviceOrientation;
- (BOOL) hasDeviceType;
- (BOOL) hasPlatform;
- (BOOL) hasGeo;
- (BOOL) hasNetworkConnectionType;
- (BOOL) hasCarrierId;
@property (readonly, strong) NSString* ip;
@property (readonly, strong) NSString* userAgent;
@property (readonly) SInt32 pixelWidth;
@property (readonly) SInt32 pixelHeight;
@property (readonly) Float64 physicalSize;
- (BOOL) isFlashEnabled;
- (BOOL) isJsEnabled;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* brand;
@property (readonly, strong) NSString* model;
@property (readonly, strong) NSString* os;
@property (readonly, strong) NSString* osVersion;
- (BOOL) isRooted;
@property (readonly) RequestDeviceDeviceOrientation deviceOrientation;
@property (readonly) RequestDeviceDeviceType deviceType;
@property (readonly) RequestDevicePlatform platform;
@property (readonly, strong) RequestDeviceGeo* geo;
@property (readonly) RequestDeviceNetworkConnectionType networkConnectionType;
@property (readonly) SInt32 carrierId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestDeviceBuilder*) builder;
+ (RequestDeviceBuilder*) builder;
+ (RequestDeviceBuilder*) builderWithPrototype:(RequestDevice*) prototype;
- (RequestDeviceBuilder*) toBuilder;

+ (RequestDevice*) parseFromData:(NSData*) data;
+ (RequestDevice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestDevice*) parseFromInputStream:(NSInputStream*) input;
+ (RequestDevice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define Geo_longitude @"longitude"
#define Geo_latitude @"latitude"
@interface RequestDeviceGeo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLongitude_:1;
  BOOL hasLatitude_:1;
  Float64 longitude;
  Float64 latitude;
}
- (BOOL) hasLongitude;
- (BOOL) hasLatitude;
@property (readonly) Float64 longitude;
@property (readonly) Float64 latitude;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestDeviceGeoBuilder*) builder;
+ (RequestDeviceGeoBuilder*) builder;
+ (RequestDeviceGeoBuilder*) builderWithPrototype:(RequestDeviceGeo*) prototype;
- (RequestDeviceGeoBuilder*) toBuilder;

+ (RequestDeviceGeo*) parseFromData:(NSData*) data;
+ (RequestDeviceGeo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestDeviceGeo*) parseFromInputStream:(NSInputStream*) input;
+ (RequestDeviceGeo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestDeviceGeo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestDeviceGeo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestDeviceGeoBuilder : PBGeneratedMessageBuilder {
@private
  RequestDeviceGeo* resultGeo;
}

- (RequestDeviceGeo*) defaultInstance;

- (RequestDeviceGeoBuilder*) clear;
- (RequestDeviceGeoBuilder*) clone;

- (RequestDeviceGeo*) build;
- (RequestDeviceGeo*) buildPartial;

- (RequestDeviceGeoBuilder*) mergeFrom:(RequestDeviceGeo*) other;
- (RequestDeviceGeoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestDeviceGeoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLongitude;
- (Float64) longitude;
- (RequestDeviceGeoBuilder*) setLongitude:(Float64) value;
- (RequestDeviceGeoBuilder*) clearLongitude;

- (BOOL) hasLatitude;
- (Float64) latitude;
- (RequestDeviceGeoBuilder*) setLatitude:(Float64) value;
- (RequestDeviceGeoBuilder*) clearLatitude;
@end

@interface RequestDeviceBuilder : PBGeneratedMessageBuilder {
@private
  RequestDevice* resultDevice;
}

- (RequestDevice*) defaultInstance;

- (RequestDeviceBuilder*) clear;
- (RequestDeviceBuilder*) clone;

- (RequestDevice*) build;
- (RequestDevice*) buildPartial;

- (RequestDeviceBuilder*) mergeFrom:(RequestDevice*) other;
- (RequestDeviceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestDeviceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIp;
- (NSString*) ip;
- (RequestDeviceBuilder*) setIp:(NSString*) value;
- (RequestDeviceBuilder*) clearIp;

- (BOOL) hasUserAgent;
- (NSString*) userAgent;
- (RequestDeviceBuilder*) setUserAgent:(NSString*) value;
- (RequestDeviceBuilder*) clearUserAgent;

- (BOOL) hasPixelWidth;
- (SInt32) pixelWidth;
- (RequestDeviceBuilder*) setPixelWidth:(SInt32) value;
- (RequestDeviceBuilder*) clearPixelWidth;

- (BOOL) hasPixelHeight;
- (SInt32) pixelHeight;
- (RequestDeviceBuilder*) setPixelHeight:(SInt32) value;
- (RequestDeviceBuilder*) clearPixelHeight;

- (BOOL) hasPhysicalSize;
- (Float64) physicalSize;
- (RequestDeviceBuilder*) setPhysicalSize:(Float64) value;
- (RequestDeviceBuilder*) clearPhysicalSize;

- (BOOL) hasIsFlashEnabled;
- (BOOL) isFlashEnabled;
- (RequestDeviceBuilder*) setIsFlashEnabled:(BOOL) value;
- (RequestDeviceBuilder*) clearIsFlashEnabled;

- (BOOL) hasIsJsEnabled;
- (BOOL) isJsEnabled;
- (RequestDeviceBuilder*) setIsJsEnabled:(BOOL) value;
- (RequestDeviceBuilder*) clearIsJsEnabled;

- (BOOL) hasName;
- (NSString*) name;
- (RequestDeviceBuilder*) setName:(NSString*) value;
- (RequestDeviceBuilder*) clearName;

- (BOOL) hasBrand;
- (NSString*) brand;
- (RequestDeviceBuilder*) setBrand:(NSString*) value;
- (RequestDeviceBuilder*) clearBrand;

- (BOOL) hasModel;
- (NSString*) model;
- (RequestDeviceBuilder*) setModel:(NSString*) value;
- (RequestDeviceBuilder*) clearModel;

- (BOOL) hasOs;
- (NSString*) os;
- (RequestDeviceBuilder*) setOs:(NSString*) value;
- (RequestDeviceBuilder*) clearOs;

- (BOOL) hasOsVersion;
- (NSString*) osVersion;
- (RequestDeviceBuilder*) setOsVersion:(NSString*) value;
- (RequestDeviceBuilder*) clearOsVersion;

- (BOOL) hasIsRooted;
- (BOOL) isRooted;
- (RequestDeviceBuilder*) setIsRooted:(BOOL) value;
- (RequestDeviceBuilder*) clearIsRooted;

- (BOOL) hasDeviceOrientation;
- (RequestDeviceDeviceOrientation) deviceOrientation;
- (RequestDeviceBuilder*) setDeviceOrientation:(RequestDeviceDeviceOrientation) value;
- (RequestDeviceBuilder*) clearDeviceOrientation;

- (BOOL) hasDeviceType;
- (RequestDeviceDeviceType) deviceType;
- (RequestDeviceBuilder*) setDeviceType:(RequestDeviceDeviceType) value;
- (RequestDeviceBuilder*) clearDeviceType;

- (BOOL) hasPlatform;
- (RequestDevicePlatform) platform;
- (RequestDeviceBuilder*) setPlatform:(RequestDevicePlatform) value;
- (RequestDeviceBuilder*) clearPlatform;

- (BOOL) hasGeo;
- (RequestDeviceGeo*) geo;
- (RequestDeviceBuilder*) setGeo:(RequestDeviceGeo*) value;
- (RequestDeviceBuilder*) setGeoBuilder:(RequestDeviceGeoBuilder*) builderForValue;
- (RequestDeviceBuilder*) mergeGeo:(RequestDeviceGeo*) value;
- (RequestDeviceBuilder*) clearGeo;

- (BOOL) hasNetworkConnectionType;
- (RequestDeviceNetworkConnectionType) networkConnectionType;
- (RequestDeviceBuilder*) setNetworkConnectionType:(RequestDeviceNetworkConnectionType) value;
- (RequestDeviceBuilder*) clearNetworkConnectionType;

- (BOOL) hasCarrierId;
- (SInt32) carrierId;
- (RequestDeviceBuilder*) setCarrierId:(SInt32) value;
- (RequestDeviceBuilder*) clearCarrierId;
@end

#define App_app_key @"appKey"
@interface RequestApp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAppKey_:1;
  NSString* appKey;
}
- (BOOL) hasAppKey;
@property (readonly, strong) NSString* appKey;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestAppBuilder*) builder;
+ (RequestAppBuilder*) builder;
+ (RequestAppBuilder*) builderWithPrototype:(RequestApp*) prototype;
- (RequestAppBuilder*) toBuilder;

+ (RequestApp*) parseFromData:(NSData*) data;
+ (RequestApp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestApp*) parseFromInputStream:(NSInputStream*) input;
+ (RequestApp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestApp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestApp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestAppBuilder : PBGeneratedMessageBuilder {
@private
  RequestApp* resultApp;
}

- (RequestApp*) defaultInstance;

- (RequestAppBuilder*) clear;
- (RequestAppBuilder*) clone;

- (RequestApp*) build;
- (RequestApp*) buildPartial;

- (RequestAppBuilder*) mergeFrom:(RequestApp*) other;
- (RequestAppBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestAppBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (RequestAppBuilder*) setAppKey:(NSString*) value;
- (RequestAppBuilder*) clearAppKey;
@end

#define User_phone_number @"phoneNumber"
#define User_imei @"imei"
#define User_mac @"mac"
#define User_openuuid @"openuuid"
#define User_idfa @"idfa"
#define User_android_id @"androidId"
#define User_app_user_id @"appUserId"
@interface RequestUser : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPhoneNumber_:1;
  BOOL hasImei_:1;
  BOOL hasMac_:1;
  BOOL hasOpenuuid_:1;
  BOOL hasIdfa_:1;
  BOOL hasAndroidId_:1;
  BOOL hasAppUserId_:1;
  NSString* phoneNumber;
  NSString* imei;
  NSString* mac;
  NSString* openuuid;
  NSString* idfa;
  NSString* androidId;
  NSString* appUserId;
}
- (BOOL) hasPhoneNumber;
- (BOOL) hasImei;
- (BOOL) hasMac;
- (BOOL) hasOpenuuid;
- (BOOL) hasIdfa;
- (BOOL) hasAndroidId;
- (BOOL) hasAppUserId;
@property (readonly, strong) NSString* phoneNumber;
@property (readonly, strong) NSString* imei;
@property (readonly, strong) NSString* mac;
@property (readonly, strong) NSString* openuuid;
@property (readonly, strong) NSString* idfa;
@property (readonly, strong) NSString* androidId;
@property (readonly, strong) NSString* appUserId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestUserBuilder*) builder;
+ (RequestUserBuilder*) builder;
+ (RequestUserBuilder*) builderWithPrototype:(RequestUser*) prototype;
- (RequestUserBuilder*) toBuilder;

+ (RequestUser*) parseFromData:(NSData*) data;
+ (RequestUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestUser*) parseFromInputStream:(NSInputStream*) input;
+ (RequestUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestUser*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestUserBuilder : PBGeneratedMessageBuilder {
@private
  RequestUser* resultUser;
}

- (RequestUser*) defaultInstance;

- (RequestUserBuilder*) clear;
- (RequestUserBuilder*) clone;

- (RequestUser*) build;
- (RequestUser*) buildPartial;

- (RequestUserBuilder*) mergeFrom:(RequestUser*) other;
- (RequestUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPhoneNumber;
- (NSString*) phoneNumber;
- (RequestUserBuilder*) setPhoneNumber:(NSString*) value;
- (RequestUserBuilder*) clearPhoneNumber;

- (BOOL) hasImei;
- (NSString*) imei;
- (RequestUserBuilder*) setImei:(NSString*) value;
- (RequestUserBuilder*) clearImei;

- (BOOL) hasMac;
- (NSString*) mac;
- (RequestUserBuilder*) setMac:(NSString*) value;
- (RequestUserBuilder*) clearMac;

- (BOOL) hasOpenuuid;
- (NSString*) openuuid;
- (RequestUserBuilder*) setOpenuuid:(NSString*) value;
- (RequestUserBuilder*) clearOpenuuid;

- (BOOL) hasIdfa;
- (NSString*) idfa;
- (RequestUserBuilder*) setIdfa:(NSString*) value;
- (RequestUserBuilder*) clearIdfa;

- (BOOL) hasAndroidId;
- (NSString*) androidId;
- (RequestUserBuilder*) setAndroidId:(NSString*) value;
- (RequestUserBuilder*) clearAndroidId;

- (BOOL) hasAppUserId;
- (NSString*) appUserId;
- (RequestUserBuilder*) setAppUserId:(NSString*) value;
- (RequestUserBuilder*) clearAppUserId;
@end

#define SDK_sdk_version @"sdkVersion"
#define SDK_timestamp @"timestamp"
#define SDK_checkcode @"checkcode"
@interface RequestSDK : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTimestamp_:1;
  BOOL hasSdkVersion_:1;
  BOOL hasCheckcode_:1;
  SInt32 timestamp;
  NSString* sdkVersion;
  NSString* checkcode;
}
- (BOOL) hasSdkVersion;
- (BOOL) hasTimestamp;
- (BOOL) hasCheckcode;
@property (readonly, strong) NSString* sdkVersion;
@property (readonly) SInt32 timestamp;
@property (readonly, strong) NSString* checkcode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestSDKBuilder*) builder;
+ (RequestSDKBuilder*) builder;
+ (RequestSDKBuilder*) builderWithPrototype:(RequestSDK*) prototype;
- (RequestSDKBuilder*) toBuilder;

+ (RequestSDK*) parseFromData:(NSData*) data;
+ (RequestSDK*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestSDK*) parseFromInputStream:(NSInputStream*) input;
+ (RequestSDK*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestSDK*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestSDK*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestSDKBuilder : PBGeneratedMessageBuilder {
@private
  RequestSDK* resultSdk;
}

- (RequestSDK*) defaultInstance;

- (RequestSDKBuilder*) clear;
- (RequestSDKBuilder*) clone;

- (RequestSDK*) build;
- (RequestSDK*) buildPartial;

- (RequestSDKBuilder*) mergeFrom:(RequestSDK*) other;
- (RequestSDKBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestSDKBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSdkVersion;
- (NSString*) sdkVersion;
- (RequestSDKBuilder*) setSdkVersion:(NSString*) value;
- (RequestSDKBuilder*) clearSdkVersion;

- (BOOL) hasTimestamp;
- (SInt32) timestamp;
- (RequestSDKBuilder*) setTimestamp:(SInt32) value;
- (RequestSDKBuilder*) clearTimestamp;

- (BOOL) hasCheckcode;
- (NSString*) checkcode;
- (RequestSDKBuilder*) setCheckcode:(NSString*) value;
- (RequestSDKBuilder*) clearCheckcode;
@end

#define Impression_imp_id @"impId"
#define Impression_adspace_id @"adspaceId"
#define Impression_ad_count @"adCount"
@interface RequestImpression : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasImpId_:1;
  BOOL hasAdspaceId_:1;
  BOOL hasAdCount_:1;
  NSString* impId;
  NSString* adspaceId;
  NSString* adCount;
}
- (BOOL) hasImpId;
- (BOOL) hasAdspaceId;
- (BOOL) hasAdCount;
@property (readonly, strong) NSString* impId;
@property (readonly, strong) NSString* adspaceId;
@property (readonly, strong) NSString* adCount;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RequestImpressionBuilder*) builder;
+ (RequestImpressionBuilder*) builder;
+ (RequestImpressionBuilder*) builderWithPrototype:(RequestImpression*) prototype;
- (RequestImpressionBuilder*) toBuilder;

+ (RequestImpression*) parseFromData:(NSData*) data;
+ (RequestImpression*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestImpression*) parseFromInputStream:(NSInputStream*) input;
+ (RequestImpression*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RequestImpression*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RequestImpression*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RequestImpressionBuilder : PBGeneratedMessageBuilder {
@private
  RequestImpression* resultImpression;
}

- (RequestImpression*) defaultInstance;

- (RequestImpressionBuilder*) clear;
- (RequestImpressionBuilder*) clone;

- (RequestImpression*) build;
- (RequestImpression*) buildPartial;

- (RequestImpressionBuilder*) mergeFrom:(RequestImpression*) other;
- (RequestImpressionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestImpressionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasImpId;
- (NSString*) impId;
- (RequestImpressionBuilder*) setImpId:(NSString*) value;
- (RequestImpressionBuilder*) clearImpId;

- (BOOL) hasAdspaceId;
- (NSString*) adspaceId;
- (RequestImpressionBuilder*) setAdspaceId:(NSString*) value;
- (RequestImpressionBuilder*) clearAdspaceId;

- (BOOL) hasAdCount;
- (NSString*) adCount;
- (RequestImpressionBuilder*) setAdCount:(NSString*) value;
- (RequestImpressionBuilder*) clearAdCount;
@end

@interface RequestBuilder : PBGeneratedMessageBuilder {
@private
  Request* resultRequest;
}

- (Request*) defaultInstance;

- (RequestBuilder*) clear;
- (RequestBuilder*) clone;

- (Request*) build;
- (Request*) buildPartial;

- (RequestBuilder*) mergeFrom:(Request*) other;
- (RequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventId;
- (NSString*) eventId;
- (RequestBuilder*) setEventId:(NSString*) value;
- (RequestBuilder*) clearEventId;

- (BOOL) hasTestType;
- (RequestTestType) testType;
- (RequestBuilder*) setTestType:(RequestTestType) value;
- (RequestBuilder*) clearTestType;

- (BOOL) hasDevice;
- (RequestDevice*) device;
- (RequestBuilder*) setDevice:(RequestDevice*) value;
- (RequestBuilder*) setDeviceBuilder:(RequestDeviceBuilder*) builderForValue;
- (RequestBuilder*) mergeDevice:(RequestDevice*) value;
- (RequestBuilder*) clearDevice;

- (BOOL) hasApp;
- (RequestApp*) app;
- (RequestBuilder*) setApp:(RequestApp*) value;
- (RequestBuilder*) setAppBuilder:(RequestAppBuilder*) builderForValue;
- (RequestBuilder*) mergeApp:(RequestApp*) value;
- (RequestBuilder*) clearApp;

- (BOOL) hasUser;
- (RequestUser*) user;
- (RequestBuilder*) setUser:(RequestUser*) value;
- (RequestBuilder*) setUserBuilder:(RequestUserBuilder*) builderForValue;
- (RequestBuilder*) mergeUser:(RequestUser*) value;
- (RequestBuilder*) clearUser;

- (BOOL) hasSdk;
- (RequestSDK*) sdk;
- (RequestBuilder*) setSdk:(RequestSDK*) value;
- (RequestBuilder*) setSdkBuilder:(RequestSDKBuilder*) builderForValue;
- (RequestBuilder*) mergeSdk:(RequestSDK*) value;
- (RequestBuilder*) clearSdk;

- (BOOL) hasImpression;
- (RequestImpression*) impression;
- (RequestBuilder*) setImpression:(RequestImpression*) value;
- (RequestBuilder*) setImpressionBuilder:(RequestImpressionBuilder*) builderForValue;
- (RequestBuilder*) mergeImpression:(RequestImpression*) value;
- (RequestBuilder*) clearImpression;
@end

#define Response_event_id @"eventId"
#define Response_imp_ads @"impAds"
@interface Response : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEventId_:1;
  NSString* eventId;
  NSMutableArray * impAdsArray;
}
- (BOOL) hasEventId;
@property (readonly, strong) NSString* eventId;
@property (readonly, strong) NSArray * impAds;
- (ResponseImpressionAd*)impAdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseBuilder*) builder;
+ (ResponseBuilder*) builder;
+ (ResponseBuilder*) builderWithPrototype:(Response*) prototype;
- (ResponseBuilder*) toBuilder;

+ (Response*) parseFromData:(NSData*) data;
+ (Response*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Response*) parseFromInputStream:(NSInputStream*) input;
+ (Response*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define ImpressionAd_expression_id @"expressionId"
#define ImpressionAd_ad_type @"adType"
#define ImpressionAd_show_tracking_urls @"showTrackingUrls"
#define ImpressionAd_banner_ads @"bannerAds"
#define ImpressionAd_apps @"apps"
@interface ResponseImpressionAd : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasExpressionId_:1;
  BOOL hasBannerAds_:1;
  BOOL hasApps_:1;
  BOOL hasAdType_:1;
  SInt32 expressionId;
  ResponseImpressionAdBannerAd* bannerAds;
  ResponseImpressionAdApps* apps;
  ResponseImpressionAdADType adType;
  NSMutableArray * showTrackingUrlsArray;
}
- (BOOL) hasExpressionId;
- (BOOL) hasAdType;
- (BOOL) hasBannerAds;
- (BOOL) hasApps;
@property (readonly) SInt32 expressionId;
@property (readonly) ResponseImpressionAdADType adType;
@property (readonly, strong) NSArray * showTrackingUrls;
@property (readonly, strong) ResponseImpressionAdBannerAd* bannerAds;
@property (readonly, strong) ResponseImpressionAdApps* apps;
- (NSString*)showTrackingUrlsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseImpressionAdBuilder*) builder;
+ (ResponseImpressionAdBuilder*) builder;
+ (ResponseImpressionAdBuilder*) builderWithPrototype:(ResponseImpressionAd*) prototype;
- (ResponseImpressionAdBuilder*) toBuilder;

+ (ResponseImpressionAd*) parseFromData:(NSData*) data;
+ (ResponseImpressionAd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseImpressionAd*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseImpressionAd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseImpressionAd*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseImpressionAd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define BannerAd_http_snippet @"httpSnippet"
#define BannerAd_type @"type"
#define BannerAd_img_url @"imgUrl"
#define BannerAd_logo_url @"logoUrl"
#define BannerAd_app_nam @"appNam"
#define BannerAd_app_description @"appDescription"
#define BannerAd_click_url @"clickUrl"
#define BannerAd_product_type @"productType"
#define BannerAd_btn_url @"btnUrl"
@interface ResponseImpressionAdBannerAd : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasHttpSnippet_:1;
  BOOL hasImgUrl_:1;
  BOOL hasLogoUrl_:1;
  BOOL hasAppNam_:1;
  BOOL hasAppDescription_:1;
  BOOL hasClickUrl_:1;
  BOOL hasBtnUrl_:1;
  BOOL hasType_:1;
  BOOL hasProductType_:1;
  NSString* httpSnippet;
  NSString* imgUrl;
  NSString* logoUrl;
  NSString* appNam;
  NSString* appDescription;
  NSString* clickUrl;
  NSString* btnUrl;
  ResponseImpressionAdBannerAdType type;
  ResponseImpressionAdBannerAdProductType productType;
}
- (BOOL) hasHttpSnippet;
- (BOOL) hasType;
- (BOOL) hasImgUrl;
- (BOOL) hasLogoUrl;
- (BOOL) hasAppNam;
- (BOOL) hasAppDescription;
- (BOOL) hasClickUrl;
- (BOOL) hasProductType;
- (BOOL) hasBtnUrl;
@property (readonly, strong) NSString* httpSnippet;
@property (readonly) ResponseImpressionAdBannerAdType type;
@property (readonly, strong) NSString* imgUrl;
@property (readonly, strong) NSString* logoUrl;
@property (readonly, strong) NSString* appNam;
@property (readonly, strong) NSString* appDescription;
@property (readonly, strong) NSString* clickUrl;
@property (readonly) ResponseImpressionAdBannerAdProductType productType;
@property (readonly, strong) NSString* btnUrl;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseImpressionAdBannerAdBuilder*) builder;
+ (ResponseImpressionAdBannerAdBuilder*) builder;
+ (ResponseImpressionAdBannerAdBuilder*) builderWithPrototype:(ResponseImpressionAdBannerAd*) prototype;
- (ResponseImpressionAdBannerAdBuilder*) toBuilder;

+ (ResponseImpressionAdBannerAd*) parseFromData:(NSData*) data;
+ (ResponseImpressionAdBannerAd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseImpressionAdBannerAd*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseImpressionAdBannerAd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseImpressionAdBannerAd*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseImpressionAdBannerAd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseImpressionAdBannerAdBuilder : PBGeneratedMessageBuilder {
@private
  ResponseImpressionAdBannerAd* resultBannerAd;
}

- (ResponseImpressionAdBannerAd*) defaultInstance;

- (ResponseImpressionAdBannerAdBuilder*) clear;
- (ResponseImpressionAdBannerAdBuilder*) clone;

- (ResponseImpressionAdBannerAd*) build;
- (ResponseImpressionAdBannerAd*) buildPartial;

- (ResponseImpressionAdBannerAdBuilder*) mergeFrom:(ResponseImpressionAdBannerAd*) other;
- (ResponseImpressionAdBannerAdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseImpressionAdBannerAdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHttpSnippet;
- (NSString*) httpSnippet;
- (ResponseImpressionAdBannerAdBuilder*) setHttpSnippet:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearHttpSnippet;

- (BOOL) hasType;
- (ResponseImpressionAdBannerAdType) type;
- (ResponseImpressionAdBannerAdBuilder*) setType:(ResponseImpressionAdBannerAdType) value;
- (ResponseImpressionAdBannerAdBuilder*) clearType;

- (BOOL) hasImgUrl;
- (NSString*) imgUrl;
- (ResponseImpressionAdBannerAdBuilder*) setImgUrl:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearImgUrl;

- (BOOL) hasLogoUrl;
- (NSString*) logoUrl;
- (ResponseImpressionAdBannerAdBuilder*) setLogoUrl:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearLogoUrl;

- (BOOL) hasAppNam;
- (NSString*) appNam;
- (ResponseImpressionAdBannerAdBuilder*) setAppNam:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearAppNam;

- (BOOL) hasAppDescription;
- (NSString*) appDescription;
- (ResponseImpressionAdBannerAdBuilder*) setAppDescription:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearAppDescription;

- (BOOL) hasClickUrl;
- (NSString*) clickUrl;
- (ResponseImpressionAdBannerAdBuilder*) setClickUrl:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearClickUrl;

- (BOOL) hasProductType;
- (ResponseImpressionAdBannerAdProductType) productType;
- (ResponseImpressionAdBannerAdBuilder*) setProductType:(ResponseImpressionAdBannerAdProductType) value;
- (ResponseImpressionAdBannerAdBuilder*) clearProductType;

- (BOOL) hasBtnUrl;
- (NSString*) btnUrl;
- (ResponseImpressionAdBannerAdBuilder*) setBtnUrl:(NSString*) value;
- (ResponseImpressionAdBannerAdBuilder*) clearBtnUrl;
@end

#define Apps_logo_url @"logoUrl"
#define Apps_app_nam @"appNam"
#define Apps_app_description @"appDescription"
#define Apps_product_type @"productType"
#define Apps_btn_url @"btnUrl"
#define Apps_click_url @"clickUrl"
@interface ResponseImpressionAdApps : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLogoUrl_:1;
  BOOL hasAppNam_:1;
  BOOL hasAppDescription_:1;
  BOOL hasBtnUrl_:1;
  BOOL hasClickUrl_:1;
  BOOL hasProductType_:1;
  NSString* logoUrl;
  NSString* appNam;
  NSString* appDescription;
  NSString* btnUrl;
  NSString* clickUrl;
  ResponseImpressionAdAppsProductType productType;
}
- (BOOL) hasLogoUrl;
- (BOOL) hasAppNam;
- (BOOL) hasAppDescription;
- (BOOL) hasProductType;
- (BOOL) hasBtnUrl;
- (BOOL) hasClickUrl;
@property (readonly, strong) NSString* logoUrl;
@property (readonly, strong) NSString* appNam;
@property (readonly, strong) NSString* appDescription;
@property (readonly) ResponseImpressionAdAppsProductType productType;
@property (readonly, strong) NSString* btnUrl;
@property (readonly, strong) NSString* clickUrl;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResponseImpressionAdAppsBuilder*) builder;
+ (ResponseImpressionAdAppsBuilder*) builder;
+ (ResponseImpressionAdAppsBuilder*) builderWithPrototype:(ResponseImpressionAdApps*) prototype;
- (ResponseImpressionAdAppsBuilder*) toBuilder;

+ (ResponseImpressionAdApps*) parseFromData:(NSData*) data;
+ (ResponseImpressionAdApps*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseImpressionAdApps*) parseFromInputStream:(NSInputStream*) input;
+ (ResponseImpressionAdApps*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResponseImpressionAdApps*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResponseImpressionAdApps*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResponseImpressionAdAppsBuilder : PBGeneratedMessageBuilder {
@private
  ResponseImpressionAdApps* resultApps;
}

- (ResponseImpressionAdApps*) defaultInstance;

- (ResponseImpressionAdAppsBuilder*) clear;
- (ResponseImpressionAdAppsBuilder*) clone;

- (ResponseImpressionAdApps*) build;
- (ResponseImpressionAdApps*) buildPartial;

- (ResponseImpressionAdAppsBuilder*) mergeFrom:(ResponseImpressionAdApps*) other;
- (ResponseImpressionAdAppsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseImpressionAdAppsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLogoUrl;
- (NSString*) logoUrl;
- (ResponseImpressionAdAppsBuilder*) setLogoUrl:(NSString*) value;
- (ResponseImpressionAdAppsBuilder*) clearLogoUrl;

- (BOOL) hasAppNam;
- (NSString*) appNam;
- (ResponseImpressionAdAppsBuilder*) setAppNam:(NSString*) value;
- (ResponseImpressionAdAppsBuilder*) clearAppNam;

- (BOOL) hasAppDescription;
- (NSString*) appDescription;
- (ResponseImpressionAdAppsBuilder*) setAppDescription:(NSString*) value;
- (ResponseImpressionAdAppsBuilder*) clearAppDescription;

- (BOOL) hasProductType;
- (ResponseImpressionAdAppsProductType) productType;
- (ResponseImpressionAdAppsBuilder*) setProductType:(ResponseImpressionAdAppsProductType) value;
- (ResponseImpressionAdAppsBuilder*) clearProductType;

- (BOOL) hasBtnUrl;
- (NSString*) btnUrl;
- (ResponseImpressionAdAppsBuilder*) setBtnUrl:(NSString*) value;
- (ResponseImpressionAdAppsBuilder*) clearBtnUrl;

- (BOOL) hasClickUrl;
- (NSString*) clickUrl;
- (ResponseImpressionAdAppsBuilder*) setClickUrl:(NSString*) value;
- (ResponseImpressionAdAppsBuilder*) clearClickUrl;
@end

@interface ResponseImpressionAdBuilder : PBGeneratedMessageBuilder {
@private
  ResponseImpressionAd* resultImpressionAd;
}

- (ResponseImpressionAd*) defaultInstance;

- (ResponseImpressionAdBuilder*) clear;
- (ResponseImpressionAdBuilder*) clone;

- (ResponseImpressionAd*) build;
- (ResponseImpressionAd*) buildPartial;

- (ResponseImpressionAdBuilder*) mergeFrom:(ResponseImpressionAd*) other;
- (ResponseImpressionAdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseImpressionAdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasExpressionId;
- (SInt32) expressionId;
- (ResponseImpressionAdBuilder*) setExpressionId:(SInt32) value;
- (ResponseImpressionAdBuilder*) clearExpressionId;

- (BOOL) hasAdType;
- (ResponseImpressionAdADType) adType;
- (ResponseImpressionAdBuilder*) setAdType:(ResponseImpressionAdADType) value;
- (ResponseImpressionAdBuilder*) clearAdType;

- (NSMutableArray *)showTrackingUrls;
- (NSString*)showTrackingUrlsAtIndex:(NSUInteger)index;
- (ResponseImpressionAdBuilder *)addShowTrackingUrls:(NSString*)value;
- (ResponseImpressionAdBuilder *)setShowTrackingUrlsArray:(NSArray *)array;
- (ResponseImpressionAdBuilder *)clearShowTrackingUrls;

- (BOOL) hasBannerAds;
- (ResponseImpressionAdBannerAd*) bannerAds;
- (ResponseImpressionAdBuilder*) setBannerAds:(ResponseImpressionAdBannerAd*) value;
- (ResponseImpressionAdBuilder*) setBannerAdsBuilder:(ResponseImpressionAdBannerAdBuilder*) builderForValue;
- (ResponseImpressionAdBuilder*) mergeBannerAds:(ResponseImpressionAdBannerAd*) value;
- (ResponseImpressionAdBuilder*) clearBannerAds;

- (BOOL) hasApps;
- (ResponseImpressionAdApps*) apps;
- (ResponseImpressionAdBuilder*) setApps:(ResponseImpressionAdApps*) value;
- (ResponseImpressionAdBuilder*) setAppsBuilder:(ResponseImpressionAdAppsBuilder*) builderForValue;
- (ResponseImpressionAdBuilder*) mergeApps:(ResponseImpressionAdApps*) value;
- (ResponseImpressionAdBuilder*) clearApps;
@end

@interface ResponseBuilder : PBGeneratedMessageBuilder {
@private
  Response* resultResponse;
}

- (Response*) defaultInstance;

- (ResponseBuilder*) clear;
- (ResponseBuilder*) clone;

- (Response*) build;
- (Response*) buildPartial;

- (ResponseBuilder*) mergeFrom:(Response*) other;
- (ResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventId;
- (NSString*) eventId;
- (ResponseBuilder*) setEventId:(NSString*) value;
- (ResponseBuilder*) clearEventId;

- (NSMutableArray *)impAds;
- (ResponseImpressionAd*)impAdsAtIndex:(NSUInteger)index;
- (ResponseBuilder *)addImpAds:(ResponseImpressionAd*)value;
- (ResponseBuilder *)setImpAdsArray:(NSArray *)array;
- (ResponseBuilder *)clearImpAds;
@end


// @@protoc_insertion_point(global_scope)
